os: linux
dist: xenial

language: php

php:
  - 7.3

services:
  - docker
  
# Run script and deploy only for master and development branches
stages:
  - name: script
    if: branch in (master, development)
  - name: deploy
    if: branch in (master, development)
    
install:
  # Prepare for deployment of Docker image
  - pip install --user awscli # install aws cli w/o sudo
  - export PATH=$PATH:$HOME/.local/bin # put aws in the path
  - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 282251075226.dkr.ecr.eu-west-1.amazonaws.com #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY envvars

  - cd ./wordpress/wp-content/themes/linklives
  
  - yarn install
  - yarn build:production
  
  - composer install --ignore-platform-reqs

script:
  - cd ../../../../

  # set wp-content dir based on branch
  - sed -i "s/{wp-content-subfolder}/${WP_CONTENT_DIR}/g" Dockerrun.aws.json
  - sed -i "s/{image-tag}/${IMAGE_TAG}/g" Dockerrun.aws.json
  - sed -i "s/{site-url}/${SITE_URL}/g" ./docker/wordpress-deploy.Dockerfile

  # build and push linklives-cms image
  - docker build -f ./docker/wordpress-deploy.Dockerfile -t linklives-wordpress .
  - docker tag linklives-wordpress 282251075226.dkr.ecr.eu-west-1.amazonaws.com/linklives-wordpress:${IMAGE_TAG}
  - docker push 282251075226.dkr.ecr.eu-west-1.amazonaws.com/linklives-wordpress:${IMAGE_TAG}

deploy:
  - provider: elasticbeanstalk
    access_key_id: ${AWS_ACCESS_KEY_ID}
    secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    region: eu-west-1
    app: ${EB_APPLICATION}
    env: ${EB_ENVIRONMENT}
    bucket: elasticbeanstalk-eu-west-1-282251075226
    edge: true
    on:
      all_branches: true
